36. Valid Sudoku
Solved
Medium
Topics
Companies
Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:

Each row must contain the digits 1-9 without repetition.
Each column must contain the digits 1-9 without repetition.
Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.
// smart way , box can be checked as each will have unique set of i/3 ,j/3 combination ,

class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        unordered_set<string>st;
        
        for(int i = 0 ;i<9;i++)
        {
            for(int j = 0 ; j< 9; j++){

                if(board[i][j]  == '.')
                        continue ;

                //isme se koi bhi string agr dubara mili toh invalid 

                string row = string(1,board[i][j]) + "_ROW_" +to_string(i);
                string col = string(1,board[i][j]) + "_COL_" +to_string(j);
                string box = string(1,board[i][j]) + "_BOX_" +to_string(i/3)+"_"+to_string(j/3);

            if(st.find(row)!=st.end()||st.find(col)!=st.end()||st.find(box)!=st.end())
                    return false ;
else{
    st.insert(row);
    st.insert(col);
    st.insert(box);
}

            }
        }
        return true;
    }
};


//brute force 
for each row in board:
    initialize empty set
    for each cell in the row:
        if cell is a digit:
            if digit already in set → return false
            else → insert digit into set

for each column in board:
    initialize empty set
    for each cell in the column:
        if cell is a digit:
            if digit already in set → return false
            else → insert digit into set

for each 3x3 box in board (total 9 boxes):
    initialize empty set
    for each cell in the 3x3 box:
        if cell is a digit:
            if digit already in set → return false
            else → insert digit into set

return true
