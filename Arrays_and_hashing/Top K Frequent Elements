Top K Frequent Elements  
Solved  
Given an integer array nums and an integer k, return the k most frequent elements within the array.

The test cases are generated such that the answer is always unique.

You may return the output in any order.

Example 1:
Using Hash Map + Bucket Sort (Time: O(n), Space: O(n)) - Best Time Complexity


class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int>map;

        for(auto &num : nums)   map[num]++; //mapping freq

        vector<vector<int>>bucket(nums.size()+1);  // bucket banao
        
        for(auto & [num,count]:map)
        {
            bucket[count].push_back(num); // bucket bharo
        }

        vector<int>res ; 

        for(int i = bucket.size()-1 ; i>=0 && res.size()<k ; i--) // list of buckets me se
        {   for(int num : bucket[i])   // har bucket ke andr ke sari values ke liye
        {

            res.push_back(num);
            if(res.size()== k)break ;
        }
        }
return res ;
    }
};
